swagger: "2.0"
info:
  description: TimeSlot manager
  title: TimeSlot Manager
  version: 1.0.0
consumes:
- application/timeslot.v1+json
produces:
- application/timeslot.v1+json
schemes:
- http
paths:
  /users/{username}:
    post:
      produces:
      - application/json
      description: Add new user
      tags:
        - timeslot
      operationId: addUser
      parameters:
        - name: username
          in: path
          type: string
          minLength: 1
          required: true
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/User"
        default:
          description: error
          schema:
            $ref: "#/definitions/Error"
  /users/{user_id}/time-slots:
    get:
      produces:
      - application/json
      description: Retrieve time slots based on userId & endAt filter
      tags:
        - timeslot
      operationId: getTimeslot
      parameters:
        - type: integer
          format: int64
          name: user_id
          in: path
          required: true
        - name: before_timestamp
          in: query
          type: integer
          format: int64
        - name: after_timestamp
          in: query
          type: integer
          format: int64

      responses:
        200:
          description: get available timeslots for the given user
          schema:
            type: array
            items:
              $ref: "#/definitions/Timeslot"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/Error"
    post:
      produces:
      - application/json
      consumes:
      - application/json
      description: Add new time slot and return time slot id
      tags:
        - timeslot
      operationId: addTimeslot
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/Timeslot"
        - type: integer
          format: int64
          name: user_id
          in: path
          required: true
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/Timeslot"
        default:
          description: error
          schema:
            $ref: "#/definitions/Error"

  /users/{user_id}/time-slots/{time_slot_id}:
    delete:
      description: Delete time slot according to given id
      tags:
        - timeslot
      operationId: destroyTimeslot
      parameters:
        - type: integer
          format: int64
          name: user_id
          in: path
          required: true
        - type: integer
          format: int64
          name: time_slot_id
          in: path
          required: true
      responses:
        204:
          description: Deleted
        default:
          description: error
          schema:
            $ref: "#/definitions/Error"
definitions:
  Timeslot:
    type: object
    required:
      - userId
      - startAt
      - endAt
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      userId:
        type: integer
        format: int64
      startAt:
        type: integer
        format: int64
        minimum: 1
      endAt:
        type: integer
        format: int64
        minimum: 1
  User:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      name:
        type: string
        minLength: 1
  Error:
    type: object
    required:
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
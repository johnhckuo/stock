// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/timeslot.v1+json"
  ],
  "produces": [
    "application/timeslot.v1+json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "TimeSlot manager",
    "title": "TimeSlot Manager",
    "version": "1.0.0"
  },
  "paths": {
    "/users/{user_id}/time-slots": {
      "get": {
        "description": "Retrieve time slots based on userId \u0026 endAt filter",
        "produces": [
          "application/json"
        ],
        "tags": [
          "timeslot"
        ],
        "operationId": "getTimeslot",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "before_timestamp",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "after_timestamp",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "get available timeslots for the given user",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Timeslot"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Add new time slot and return time slot id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "timeslot"
        ],
        "operationId": "addTimeslot",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Timeslot"
            }
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Timeslot"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/{user_id}/time-slots/{time_slot_id}": {
      "delete": {
        "description": "Delete time slot according to given id",
        "tags": [
          "timeslot"
        ],
        "operationId": "destroyTimeslot",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "time_slot_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/{username}": {
      "post": {
        "description": "Add new user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "timeslot"
        ],
        "operationId": "addUser",
        "parameters": [
          {
            "minLength": 1,
            "type": "string",
            "name": "username",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Timeslot": {
      "type": "object",
      "required": [
        "startAt",
        "endAt"
      ],
      "properties": {
        "endAt": {
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "startAt": {
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/timeslot.v1+json"
  ],
  "produces": [
    "application/timeslot.v1+json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "TimeSlot manager",
    "title": "TimeSlot Manager",
    "version": "1.0.0"
  },
  "paths": {
    "/users/{user_id}/time-slots": {
      "get": {
        "description": "Retrieve time slots based on userId \u0026 endAt filter",
        "produces": [
          "application/json"
        ],
        "tags": [
          "timeslot"
        ],
        "operationId": "getTimeslot",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "before_timestamp",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "after_timestamp",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "get available timeslots for the given user",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Timeslot"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Add new time slot and return time slot id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "timeslot"
        ],
        "operationId": "addTimeslot",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Timeslot"
            }
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Timeslot"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/{user_id}/time-slots/{time_slot_id}": {
      "delete": {
        "description": "Delete time slot according to given id",
        "tags": [
          "timeslot"
        ],
        "operationId": "destroyTimeslot",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "time_slot_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/{username}": {
      "post": {
        "description": "Add new user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "timeslot"
        ],
        "operationId": "addUser",
        "parameters": [
          {
            "minLength": 1,
            "type": "string",
            "name": "username",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Timeslot": {
      "type": "object",
      "required": [
        "startAt",
        "endAt"
      ],
      "properties": {
        "endAt": {
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "startAt": {
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    }
  }
}`))
}
